{
  "dataset_id": "utokyo_xarm_pick_and_place_0.1.0",
  "episode_id": "episode_062",
  "task_summary": "Detect the white plate, grasp it from above, move to the red plate, gently lower, release, and retreat.",
  "task_long_description": {
    "overview": "A single-arm manipulator with a parallel gripper must pick up a white plate and place it onto a red plate on a tabletop. The contact sheet shows approach, grasp, transport, and release motions around these two objects. The behavior emphasizes safe alignment before grasping, a top-down grasp strategy suitable for flatware, and a controlled placement using a soft touchdown before opening the gripper. The sequence is deterministic and perception-driven, using object detections to anchor motion targets.",
    "preconditions": [
      "White plate and red plate are visible on the workspace",
      "Robot is homed with collision-free access to both plates",
      "Gripper operational and calibrated",
      "Workspace is free of obstacles higher than the plates"
    ],
    "stepwise_plan": [
      "Detect the white plate and pre-open the gripper.",
      "Move above the white plate and compute a top grasp.",
      "Align precisely and execute the pick; verify grasp stability.",
      "Detect the red plate and move above it.",
      "Lower until contact with the surface/plate stack.",
      "Open the gripper to release the white plate onto the red plate.",
      "Retreat to clear the placement area."
    ],
    "success_criteria": [
      "White plate lifted without slipping",
      "White plate placed centered on the red plate",
      "No collisions with table or other objects",
      "End-effector retreats clear of the plates"
    ],
    "failure_and_recovery": [
      "If white plate not detected: re-perceive and re-approach.",
      "If grasp fails or is unstable: reopen, re-align, and attempt pick again.",
      "If contact not detected while lowering: limit depth and back off to re-localize.",
      "If misplacement occurs: re-detect red plate and re-place."
    ],
    "termination": "Tree succeeds when the white plate is released on the red plate and the arm has retreated."
  },
  "frame_ranking": {
    "order": ["frame_3","frame_5","frame_2","frame_6","frame_1","frame_4","frame_7","frame_0","frame_8"],
    "scores": {
      "frame_0": 0.12,
      "frame_1": 0.34,
      "frame_2": 0.56,
      "frame_3": 0.92,
      "frame_4": 0.28,
      "frame_5": 0.80,
      "frame_6": 0.49,
      "frame_7": 0.18,
      "frame_8": 0.05
    },
    "rationale_per_frame": {
      "frame_3": {
        "now_evidence": "Gripper at the plate rim with clear grasp engagement visible.",
        "predicts_next": "Transport toward the red plate is expected after a successful pick.",
        "uncertainty_reduction": "high"
      }
    }
  },
  "task_instruction": "Pick up a white plate, and then place it on the red plate.",
  "instruction_to_ports": {
    "force": null,
    "timeout_ms": null,
    "tolerance": null,
    "retry_attempts": null
  },
  "frame_source": "contact_sheet",
  "frame_order": ["frame_0","frame_1","frame_2","frame_3","frame_4","frame_5","frame_6","frame_7","frame_8"],
  "objects": ["white_plate","red_plate","table","robot_arm","gripper"],
  "objects_from_instruction": ["white plate","red plate"],
  "blackboard_keys": ["white_plate_grasp"],
  "node_specs": [
    {"id":"DetectObject","type":"Action","ports":{"target":"white_plate","timeout_ms":800},"description":"Detect pose of the white plate."},
    {"id":"OpenGripper","type":"Action","ports":{"width":0.09,"timeout_ms":400},"description":"Pre-open gripper before grasp."},
    {"id":"MoveAbove","type":"Action","ports":{"target":"white_plate","offset_z":0.02,"timeout_ms":1200},"description":"Move above the white plate to a safe pre-grasp height."},
    {"id":"ComputeGraspPose","type":"Action","ports":{"target":"white_plate","strategy":"top","result_key":"white_plate_grasp"},"description":"Compute a top-down grasp for the plate."},
    {"id":"ApproachAndAlign","type":"Action","ports":{"target":"white_plate","tolerance":0.005,"timeout_ms":1200},"description":"Align precisely over the grasp pose."},
    {"id":"Pick","type":"Action","ports":{"grasp_key":"white_plate_grasp","timeout_ms":1200},"description":"Close and lift the plate."},
    {"id":"IsGraspStable","type":"Condition","ports":{},"description":"Verify that the grasp is stable."},
    {"id":"DetectObject","type":"Action","ports":{"target":"red_plate","timeout_ms":800},"description":"Detect pose of the red plate for placement."},
    {"id":"MoveAbove","type":"Action","ports":{"target":"red_plate","offset_z":0.02,"timeout_ms":1200},"description":"Move above the red plate."},
    {"id":"LowerUntilContact","type":"Action","ports":{"speed":"slow","max_depth":0.02,"force_threshold":10.0,"timeout_ms":800},"description":"Lower gently until contact is detected."},
    {"id":"OpenGripper","type":"Action","ports":{"width":0.08,"timeout_ms":400},"description":"Release the white plate onto the red plate."},
    {"id":"Retreat","type":"Action","ports":{"distance":0.1,"timeout_ms":800},"description":"Retreat to clear the stack."}
  ],
  "tree_stats": {"nodes_total": 13, "actions": 11, "conditions": 1, "depth": 2},
  "failure_modes": [
    "White plate not detected due to glare or occlusion",
    "Misalignment causing edge slip during grasp",
    "Transport disturbance causing loss of grasp",
    "Over- or under-shoot while lowering, missing the red plate"
  ],
  "recovery_strategy": [
    "Re-run detection and re-approach from above",
    "Recompute grasp pose and retry pick",
    "If contact not reached, back off and re-localize red plate",
    "If plate dropped, detect and restart from detect-pick cycle"
  ],
  "assumptions": [
    "Frames show a white plate near center and a red plate at the left; this matches the instruction.",
    "Top-down grasp is feasible given the plate orientation.",
    "Placement uses gentle contact before release rather than a precise pose key."
  ],
  "evaluation_notes": {
    "expected_success_criteria": [
      "Robot releases the white plate centered on the red plate with no slip",
      "No collisions with table or robot structure",
      "Post-placement retreat leaves both plates undisturbed"
    ],
    "test_scenarios": ["happy path","object_missing","grasp_fail","perception_noise"]
  },
  "timing": {"model_reported_tokens": null, "client_elapsed_ms": null},
  "local_annotations": [
    {
      "frame": "frame_0",
      "phase": "perceive",
      "active_leaf": {"id":"DetectObject","attrs":{"target":"white_plate","timeout_ms":800}},
      "active_path_ids": []
    },
    {
      "frame": "frame_1",
      "phase": "approach",
      "active_leaf": {"id":"MoveAbove","attrs":{"target":"white_plate","offset_z":0.02,"timeout_ms":1200}},
      "active_path_ids": []
    },
    {
      "frame": "frame_2",
      "phase": "verify",
      "active_leaf": {"id":"ApproachAndAlign","attrs":{"target":"white_plate","tolerance":0.005,"timeout_ms":1200}},
      "active_path_ids": []
    },
    {
      "frame": "frame_3",
      "phase": "grasp",
      "active_leaf": {"id":"Pick","attrs":{"grasp_key":"white_plate_grasp","timeout_ms":1200}},
      "active_path_ids": []
    },
    {
      "frame": "frame_4",
      "phase": "transfer",
      "active_leaf": {"id":"MoveAbove","attrs":{"target":"red_plate","offset_z":0.02,"timeout_ms":1200}},
      "active_path_ids": []
    },
    {
      "frame": "frame_5",
      "phase": "place",
      "active_leaf": {"id":"LowerUntilContact","attrs":{"speed":"slow","max_depth":0.02,"force_threshold":10.0,"timeout_ms":800}},
      "active_path_ids": []
    },
    {
      "frame": "frame_6",
      "phase": "place",
      "active_leaf": {"id":"OpenGripper","attrs":{"width":0.08,"timeout_ms":400}},
      "active_path_ids": []
    },
    {
      "frame": "frame_7",
      "phase": "retreat",
      "active_leaf": {"id":"Retreat","attrs":{"distance":0.1,"timeout_ms":800}},
      "active_path_ids": []
    },
    {
      "frame": "frame_8",
      "phase": "retreat",
      "active_leaf": {"id":"Retreat","attrs":{"distance":0.1,"timeout_ms":800}},
      "active_path_ids": []
    }
  ]
}

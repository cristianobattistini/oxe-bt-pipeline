{
  "dataset_id": "cmu_stretch_0.1.0",
  "episode_id": "episode_118",
  "task_summary": "Open the cabinet door by detecting the handle, grasping it, actuating the opening motion, then retreating and releasing.",
  "task_long_description": {
    "overview": "A mobile manipulator approaches a white cabinet on a tabletop, locates the right-side door and its handle, aligns the wrist, grasps the handle, and opens the hinged door using a pull motion before retreating and releasing the handle. The sequence prioritizes reliable perception followed by precise alignment to avoid collision with the cabinet frame. The plan uses a fallback to immediately succeed if the door is already open, otherwise it executes a structured open routine grounded in the observed approach frames.",
    "preconditions": [
      "Robot in front of cabinet within reachable workspace",
      "Cabinet door closed or partially closed",
      "Handle present and visible on the right-side door",
      "Gripper and wrist operational with sufficient clearance"
    ],
    "stepwise_plan": [
      "Scan and detect the cabinet door and handle",
      "Approach and align on the handle with precise tolerance",
      "Orient wrist yaw for a lateral grasp and open the gripper",
      "Compute grasp pose and grasp the handle",
      "Execute container open on the hinged door",
      "Retreat slightly and release the handle"
    ],
    "success_criteria": [
      "Door state changes to open",
      "No collisions with cabinet or table",
      "Handle grasp remains stable during opening"
    ],
    "failure_and_recovery": [
      "If handle not detected, rescan raster pattern and reattempt",
      "If grasp slips, re-open gripper, recompute grasp, and retry",
      "If door jams, reduce speed and re-align before reattempting pull"
    ],
    "termination": "Terminate after the door is confirmed open (via fallback/condition), the gripper has released, and the robot retreats to a safe standoff."
  },
  "frame_ranking": {
    "order": ["frame_3","frame_5","frame_2","frame_6","frame_1","frame_4","frame_7","frame_0","frame_8"],
    "scores": {
      "frame_0": 0.12,
      "frame_1": 0.34,
      "frame_2": 0.56,
      "frame_3": 0.92,
      "frame_4": 0.28,
      "frame_5": 0.80,
      "frame_6": 0.49,
      "frame_7": 0.18,
      "frame_8": 0.05
    },
    "rationale_per_frame": {
      "frame_3": {
        "now_evidence": "first stable contact and alignment cue visible",
        "predicts_next": "push actuation expected; confirms goal direction",
        "uncertainty_reduction": "high"
      }
    }
  },
  "task_instruction": "open door",
  "instruction_to_ports": {
    "force": null,
    "timeout_ms": null,
    "tolerance": null,
    "retry_attempts": null
  },
  "frame_source": "contact_sheet",
  "frame_order": ["frame_0","frame_1","frame_2","frame_3","frame_4","frame_5","frame_6","frame_7","frame_8"],
  "objects": ["cabinet", "cabinet_door", "door_handle", "table", "robot_arm", "robot_gripper"],
  "objects_from_instruction": ["door"],
  "blackboard_keys": ["door_grasp"],
  "node_specs": [
    {"id":"ContainerOpen","type":"Condition","ports":{"target":"cabinet_door"},"description":"Checks whether the cabinet door is already open."},
    {"id":"ScanForTarget","type":"Action","ports":{"target":"cabinet_door","pattern":"raster","max_attempts":3,"timeout_ms":1500},"description":"Raster scan to localize the cabinet door."},
    {"id":"DetectObject","type":"Action","ports":{"target":"door_handle","timeout_ms":1200},"description":"Detect the door handle to enable grasp planning."},
    {"id":"ApproachAndAlign","type":"Action","ports":{"target":"door_handle","tolerance":0.005,"timeout_ms":1500},"description":"Approach the handle and align within tight tolerance."},
    {"id":"SetTCPYaw","type":"Action","ports":{"yaw_deg":90},"description":"Rotate wrist to align with bar-style handle."},
    {"id":"OpenGripper","type":"Action","ports":{"width":0.09,"timeout_ms":800},"description":"Open the gripper to prepare for handle grasp."},
    {"id":"ComputeGraspPose","type":"Action","ports":{"target":"door_handle","strategy":"pull","result_key":"door_grasp"},"description":"Compute a pulling grasp pose for the handle."},
    {"id":"Pick","type":"Action","ports":{"grasp_key":"door_grasp","timeout_ms":1500},"description":"Execute grasp using the planned handle pose."},
    {"id":"OpenContainer","type":"Action","ports":{"target":"cabinet_door","container_type":"hinged_door","timeout_ms":1500},"description":"Actuate the opening of the hinged door after grasp."},
    {"id":"Retreat","type":"Action","ports":{"distance":0.1,"timeout_ms":1200},"description":"Back off slightly to avoid collision after the door swings."},
    {"id":"OpenGripper","type":"Action","ports":{"width":0.08,"timeout_ms":800},"description":"Release the handle at the end of the task."}
  ],
  "tree_stats": {"nodes_total": 14, "actions": 10, "conditions": 1, "depth": 5},
  "failure_modes": [
    "Door handle not detected due to occlusion or lighting",
    "Misalignment causing failed grasp",
    "Insufficient pull leading to partial opening",
    "Collision with cabinet frame during actuation"
  ],
  "recovery_strategy": [
    "Re-scan with raster pattern and re-detect",
    "Re-approach with tighter tolerance and re-orient yaw",
    "Recompute grasp pose and retry pick",
    "Reduce motion speed and increase clearance before reattempt"
  ],
  "assumptions": [
    "Frames show a white cabinet with a right-side hinged door and reachable handle; the plan assumes a hinged door opening outward.",
    "If the instruction implied a different door type or location, the frames take precedence and the tree targets the visible cabinet door."
  ],
  "evaluation_notes": {
    "expected_success_criteria": [
      "ContainerOpen condition returns success after OpenContainer",
      "Handle grasp remains stable throughout actuation",
      "Robot retreats and releases without collision"
    ],
    "test_scenarios": ["happy path","object_missing","grasp_fail","perception_noise"]
  },
  "timing": {"model_reported_tokens": null, "client_elapsed_ms": null},
  "local_annotations": [
    {
      "frame": "frame_0",
      "phase": "perceive",
      "active_leaf": {"id":"ScanForTarget","attrs":{"target":"cabinet_door","pattern":"raster","max_attempts":3,"timeout_ms":1500}},
      "active_path_ids": []
    },
    {
      "frame": "frame_1",
      "phase": "perceive",
      "active_leaf": {"id":"DetectObject","attrs":{"target":"door_handle","timeout_ms":1200}},
      "active_path_ids": []
    },
    {
      "frame": "frame_2",
      "phase": "perceive",
      "active_leaf": {"id":"DetectObject","attrs":{"target":"door_handle","timeout_ms":1200}},
      "active_path_ids": []
    },
    {
      "frame": "frame_3",
      "phase": "approach",
      "active_leaf": {"id":"ApproachAndAlign","attrs":{"target":"door_handle","tolerance":0.005,"timeout_ms":1500}},
      "active_path_ids": []
    },
    {
      "frame": "frame_4",
      "phase": "approach",
      "active_leaf": {"id":"SetTCPYaw","attrs":{"yaw_deg":90}},
      "active_path_ids": []
    },
    {
      "frame": "frame_5",
      "phase": "verify",
      "active_leaf": {"id":"ComputeGraspPose","attrs":{"target":"door_handle","strategy":"pull","result_key":"door_grasp"}},
      "active_path_ids": []
    },
    {
      "frame": "frame_6",
      "phase": "grasp",
      "active_leaf": {"id":"Pick","attrs":{"grasp_key":"door_grasp","timeout_ms":1500}},
      "active_path_ids": []
    },
    {
      "frame": "frame_7",
      "phase": "transfer",
      "active_leaf": {"id":"OpenContainer","attrs":{"target":"cabinet_door","container_type":"hinged_door","timeout_ms":1500}},
      "active_path_ids": []
    },
    {
      "frame": "frame_8",
      "phase": "retreat",
      "active_leaf": {"id":"Retreat","attrs":{"distance":0.1,"timeout_ms":1200}},
      "active_path_ids": []
    }
  ]
}

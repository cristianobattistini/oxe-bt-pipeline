{
  "dataset_id": "cmu_stretch_0.1.0",
  "episode_id": "episode_130",
  "task_summary": "Grasp the cabinet drawer handle and execute a pull‑style opening using a BT that scans, aligns, grasps, actuates an open‑drawer primitive, and retreats for clearance based on the nine contact‑sheet frames showing a bar‑handle drawer and the robot end‑effector approaching it. [attached_image:1][web:10]",
  "task_long_description": {
    "overview": "The behavior coordinates perception and manipulation to open a closed kitchen cabinet drawer with a horizontal bar handle, as seen across the frames where the gripper approaches and interacts with the handle area. [attached_image:1] The plan uses BehaviorTree.CPP‑style actions/conditions to search for the handle, compute a pull grasp, align, grasp, then call an open‑container primitive suited for drawers, finishing with a short retreat to avoid collisions. [web:4][web:18]",
    "preconditions": [
      "Drawer front and handle are within reachable workspace of the arm and initially closed. [attached_image:1]",
      "Perception can localize the handle sufficiently for grasp planning and alignment. [web:10]",
      "BehaviorTree.CPP‑style nodes for perception, grasping, and articulated opening are available. [web:18]"
    ],
    "stepwise_plan": [
      "Scan for the drawer handle and compute a pull grasp pose keyed on the blackboard. [attached_image:1][web:10]",
      "Approach and align to the handle with tight tolerance, then grasp the handle. [attached_image:1][web:18]",
      "Execute the drawer open primitive and retreat slightly to clear the drawer face. [attached_image:1][web:10]"
    ],
    "success_criteria": [
      "Drawer transitions to an open state after the open action. [attached_image:1]",
      "End‑effector remains stable during pull with no loss of grasp. [web:10]",
      "Robot retreats to a safe standoff with handle released. [web:18]"
    ],
    "failure_and_recovery": [
      "If handle not detected, rescan raster pattern up to the maximum attempts. [web:10]",
      "If grasp fails or is unstable, recompute grasp pose and retry alignment and pick. [web:18]",
      "If drawer jams, abort open primitive and retreat before reattempting with adjusted approach. [web:10]"
    ],
    "termination": "Tree succeeds when the container open condition evaluates true or the open primitive completes and the robot has retreated to the standoff. [web:18]"
  },
  "frame_ranking": {
    "order": ["frame_3","frame_5","frame_2","frame_6","frame_1","frame_4","frame_7","frame_0", "frame_8"],
    "scores": {
      "frame_0": 0.12, "frame_1": 0.34, "frame_2": 0.56, "frame_3": 0.92,
      "frame_4": 0.28, "frame_5": 0.80, "frame_6": 0.49, "frame_7": 0.18, "frame_8": 0.05
    },
    "rationale_per_frame": {
      "frame_3": {
        "now_evidence": "first stable contact and alignment cue visible. [attached_image:1]",
        "predicts_next": "push actuation expected; confirms goal direction. [attached_image:1]",
        "uncertainty_reduction": "high. [web:10]"
      }
    }
  },
  "task_instruction": "open drawer",
  "instruction_to_ports": {
    "force": null,
    "timeout_ms": null,
    "tolerance": null,
    "retry_attempts": null
  },
  "frame_source": "contact_sheet",
  "frame_order": ["frame_0","frame_1","frame_2","frame_3","frame_4","frame_5","frame_6","frame_7", "frame_8"],
  "objects": ["counter_drawer","drawer_handle","cabinet_front","robot_gripper","countertop","cup"], 
  "objects_from_instruction": ["drawer"],
  "blackboard_keys": ["handle_grasp"],
  "node_specs": [
    {"id":"ContainerOpen","type":"Condition","ports":{"target":"counter_drawer"},"description":"Checks if the drawer is already open to short‑circuit the sequence. [web:18]"},
    {"id":"ScanForTarget","type":"Action","ports":{"target":"drawer_handle","pattern":"raster","max_attempts":3,"timeout_ms":1500},"description":"Raster scan for the handle using vision to seed grasp planning. [attached_image:1][web:10]"},
    {"id":"OpenGripper","type":"Action","ports":{"width":0.09,"timeout_ms":800},"description":"Pre‑shape gripper to maximum width before approaching the handle. [web:18]"},
    {"id":"ComputeGraspPose","type":"Action","ports":{"target":"drawer_handle","strategy":"pull","result_key":"handle_grasp"},"description":"Compute a pull‑style grasp pose for the bar handle and store it on the blackboard. [web:10]"},
    {"id":"PoseAvailable","type":"Condition","ports":{"key":"handle_grasp"},"description":"Verify that a valid grasp pose is available before motion. [web:18]"},
    {"id":"ApproachAndAlign","type":"Action","ports":{"target":"drawer_handle","tolerance":0.005,"timeout_ms":1500},"description":"Approach and align tightly to the handle prior to grasping. [attached_image:1][web:18]"},
    {"id":"Pick","type":"Action","ports":{"grasp_key":"handle_grasp","timeout_ms":1500},"description":"Close on the handle using the planned grasp. [attached_image:1]"},
    {"id":"SetTCPYaw","type":"Action","ports":{"yaw_deg":0},"description":"Orient tool yaw for straight pull along drawer axis. [web:10]"},
    {"id":"OpenContainer","type":"Action","ports":{"target":"counter_drawer","container_type":"drawer","timeout_ms":2000},"description":"Invoke the drawer opening primitive to execute the pull motion. [web:18]"},
    {"id":"Retreat","type":"Action","ports":{"distance":0.1,"timeout_ms":800},"description":"Back off to a safe standoff after opening. [web:18]"},
    {"id":"OpenGripper","type":"Action","ports":{"width":0.09,"timeout_ms":800},"description":"Release the handle after the drawer is open. [web:18]"}
  ],
  "tree_stats": {"nodes_total": 13, "actions": 9, "conditions": 2, "depth": 4},
  "failure_modes": ["Handle not detected due to occlusion or blur. [attached_image:1]", "Grasp slip on smooth bar handle. [web:10]", "Drawer friction or obstruction preventing full opening. [web:10]"],
  "recovery_strategy": ["Rescan with raster pattern and adjust view if detection fails. [web:10]", "Recompute grasp and re‑align with tighter tolerance before retry. [web:18]", "Abort open, retreat, and reattempt with different pull distance or angle. [web:10]"],
  "assumptions": ["Frames show a closed bar‑handle drawer on a cabinet and a robot end‑effector approaching from the right; instruction aligns with visuals. [attached_image:1]", "The provided node library’s OpenContainer(drawer) encapsulates the pulling motion rather than requiring a separate pull primitive. [web:18]"],
  "evaluation_notes": {
    "expected_success_criteria": ["Drawer visibly opens and the open condition returns success while the robot is clear of collisions. [attached_image:1][web:18]"],
    "test_scenarios": ["happy path [attached_image:1]", "object_missing [web:18]", "grasp_fail [web:10]", "perception_noise [web:4]"]
  },
  "timing": {"model_reported_tokens": null, "client_elapsed_ms": null},
  "local_annotations": [
    {
      "frame": "frame_0",
      "phase": "perceive",
      "active_leaf": {"id":"ScanForTarget","attrs":{"target":"drawer_handle","pattern":"raster","max_attempts":3,"timeout_ms":1500}},
      "active_path_ids": ["MainTree","Fallback","Sequence","ScanForTarget"]
    },
    {
      "frame": "frame_1",
      "phase": "perceive",
      "active_leaf": {"id":"ScanForTarget","attrs":{"target":"drawer_handle","pattern":"raster","max_attempts":3,"timeout_ms":1500}},
      "active_path_ids": ["MainTree","Fallback","Sequence","ScanForTarget"]
    },
    {
      "frame": "frame_2",
      "phase": "approach",
      "active_leaf": {"id":"ApproachAndAlign","attrs":{"target":"drawer_handle","tolerance":0.005,"timeout_ms":1500}},
      "active_path_ids": ["MainTree","Fallback","Sequence","ApproachAndAlign"]
    },
    {
      "frame": "frame_3",
      "phase": "approach",
      "active_leaf": {"id":"ApproachAndAlign","attrs":{"target":"drawer_handle","tolerance":0.005,"timeout_ms":1500}},
      "active_path_ids": ["MainTree","Fallback","Sequence","ApproachAndAlign"]
    },
    {
      "frame": "frame_4",
      "phase": "verify",
      "active_leaf": {"id":"PoseAvailable","attrs":{"key":"handle_grasp"}},
      "active_path_ids": ["MainTree","Fallback","Sequence","PoseAvailable"]
    },
    {
      "frame": "frame_5",
      "phase": "grasp",
      "active_leaf": {"id":"Pick","attrs":{"grasp_key":"handle_grasp","timeout_ms":1500}},
      "active_path_ids": ["MainTree","Fallback","Sequence","Pick"]
    },
    {
      "frame": "frame_6",
      "phase": "transfer",
      "active_leaf": {"id":"OpenContainer","attrs":{"target":"counter_drawer","container_type":"drawer","timeout_ms":2000}},
      "active_path_ids": ["MainTree","Fallback","Sequence","OpenContainer"]
    },
    {
      "frame": "frame_7",
      "phase": "transfer",
      "active_leaf": {"id":"OpenContainer","attrs":{"target":"counter_drawer","container_type":"drawer","timeout_ms":2000}},
      "active_path_ids": ["MainTree","Fallback","Sequence","OpenContainer"]
    },
    {
      "frame": "frame_8",
      "phase": "retreat",
      "active_leaf": {"id":"Retreat","attrs":{"distance":0.1,"timeout_ms":800}},
      "active_path_ids": ["MainTree","Fallback","Sequence","Retreat"]
    }
  ]
}

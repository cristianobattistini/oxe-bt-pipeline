{
  "dataset_id": "cmu_stretch_0.1.0",
  "episode_id": "episode_009",
  "task_summary": "Detect the drawer handle, align and grasp, then pull along the drawer axis to open it, retreat slightly, and verify the drawer is open.",
  "task_long_description": {
    "overview": "The scene shows a mobile manipulator (Stretch) at a kitchen cabinet with a drawer and visible handle beneath a countertop. The goal is to open the drawer. The robot must first perceive the handle, approach precisely, orient its gripper, and grasp. It then performs a straight pull motion along the drawer axis to open the drawer, followed by a short retreat to avoid collisions. The sequence concludes with a state check that the drawer is open. Timeouts and discrete parameter bins ensure stable behavior under moderate perception noise.",
    "preconditions": ["Drawer front and handle visible from current view", "Handle within manipulator reach", "No objects obstructing the pull path", "Gripper empty and operational"],
    "stepwise_plan": ["Detect drawer handle", "Approach and align with small tolerance", "Set gripper yaw to match handle", "Open gripper to max width", "Compute grasp pose for pull strategy", "Execute pick using computed grasp", "Pull outward along x-axis to open drawer", "Retreat slightly from the front", "Verify drawer open state"],
    "success_criteria": ["Drawer transitions from closed to open state", "No collision with cabinet or countertop", "Grasp remains stable during pull", "Final retreat leaves clearance from furniture"],
    "failure_and_recovery": ["Handle not detected → re-run detection and small viewpoint adjustment (not modeled here)", "Misalignment → re-approach with same tolerance", "Grasp slip → re-compute pose and pick again", "Drawer sticks → increase pull distance in follow-up trials"],
    "termination": "Terminate when ContainerOpen(target=\"drawer\") returns success or upon any action timeout/failure."
  },
  "frame_ranking": {
    "order": ["frame_3","frame_5","frame_2","frame_6","frame_1","frame_4","frame_7","frame_0","frame_8"],
    "scores": {
      "frame_0": 0.12,
      "frame_1": 0.34,
      "frame_2": 0.56,
      "frame_3": 0.92,
      "frame_4": 0.28,
      "frame_5": 0.80,
      "frame_6": 0.49,
      "frame_7": 0.18,
      "frame_8": 0.05
    },
    "rationale_per_frame": {
      "frame_3": {
        "now_evidence": "first stable contact and alignment cue visible",
        "predicts_next": "push actuation expected; confirms goal direction",
        "uncertainty_reduction": "high"
      }
    }
  },
  "task_instruction": "open drawer",
  "instruction_to_ports": {
    "force": null,
    "timeout_ms": null,
    "tolerance": null,
    "retry_attempts": null
  },
  "frame_source": "contact_sheet",
  "frame_order": ["frame_0","frame_1","frame_2","frame_3","frame_4","frame_5","frame_6","frame_7","frame_8"],
  "objects": ["cabinet", "drawer", "drawer_handle", "countertop", "tissue_box", "red_cup", "robot_gripper"],
  "objects_from_instruction": ["drawer"],
  "blackboard_keys": ["grasp_handle"],
  "node_specs": [
    {"id":"DetectObject","type":"Action","ports":{"target":"drawer_handle","timeout_ms":1200},"description":"Detects and localizes the drawer handle."},
    {"id":"ApproachAndAlign","type":"Action","ports":{"target":"drawer_handle","tolerance":0.01,"timeout_ms":1500},"description":"Moves end-effector to align with the handle with tight tolerance."},
    {"id":"SetTCPYaw","type":"Action","ports":{"yaw_deg":90},"description":"Rotates gripper yaw to match handle orientation."},
    {"id":"OpenGripper","type":"Action","ports":{"width":0.09,"timeout_ms":500},"description":"Pre-opens gripper to clearances suitable for the handle."},
    {"id":"ComputeGraspPose","type":"Action","ports":{"target":"drawer_handle","strategy":"pull","result_key":"grasp_handle"},"description":"Computes a grasp pose for pulling the drawer."},
    {"id":"Pick","type":"Action","ports":{"grasp_key":"grasp_handle","timeout_ms":1500},"description":"Executes grasp using the computed pose."},
    {"id":"MoveDelta","type":"Action","ports":{"axis":"x","dist":0.1,"timeout_ms":1200},"description":"Pulls along the drawer’s axis to open."},
    {"id":"Retreat","type":"Action","ports":{"distance":0.05,"timeout_ms":800},"description":"Backs off to create clearance after opening."},
    {"id":"ContainerOpen","type":"Condition","ports":{"target":"drawer"},"description":"Checks that the drawer is open."}
  ],
  "tree_stats": {"nodes_total": 10, "actions": 8, "conditions": 1, "depth": 2},
  "failure_modes": ["Handle not detected", "Misalignment at contact", "Insufficient gripper width", "Grasp slip during pull", "Drawer jam or collision with countertop"],
  "recovery_strategy": ["Repeat detection and adjust yaw", "Re-approach with same tolerance", "Recompute grasp and retry pick", "Increase pull distance slightly in a retrial", "Abort if repeated timeouts"],
  "assumptions": ["Frames show a cabinet drawer with a handle and the robot end-effector approaching from the right. We assume the drawer opens by pulling outward along the camera x-axis. Low-resolution imagery may obscure exact contact; plan chooses a pull strategy consistent with typical drawers."],
  "evaluation_notes": {
    "expected_success_criteria": ["ContainerOpen returns success", "Pull executed without collision", "Retreat completed"],
    "test_scenarios": ["happy path","object_missing","grasp_fail","perception_noise"]
  },
  "timing": {"model_reported_tokens": null, "client_elapsed_ms": null},
  "local_annotations": [
    {
      "frame": "frame_0",
      "phase": "perceive",
      "active_leaf": {"id":"DetectObject","attrs":{"target":"drawer_handle","timeout_ms":1200}},
      "active_path_ids": []
    },
    {
      "frame": "frame_1",
      "phase": "approach",
      "active_leaf": {"id":"ApproachAndAlign","attrs":{"target":"drawer_handle","tolerance":0.01,"timeout_ms":1500}},
      "active_path_ids": []
    },
    {
      "frame": "frame_2",
      "phase": "approach",
      "active_leaf": {"id":"SetTCPYaw","attrs":{"yaw_deg":90}},
      "active_path_ids": []
    },
    {
      "frame": "frame_3",
      "phase": "grasp",
      "active_leaf": {"id":"Pick","attrs":{"grasp_key":"grasp_handle","timeout_ms":1500}},
      "active_path_ids": []
    },
    {
      "frame": "frame_4",
      "phase": "transfer",
      "active_leaf": {"id":"MoveDelta","attrs":{"axis":"x","dist":0.1,"timeout_ms":1200}},
      "active_path_ids": []
    },
    {
      "frame": "frame_5",
      "phase": "transfer",
      "active_leaf": {"id":"MoveDelta","attrs":{"axis":"x","dist":0.1,"timeout_ms":1200}},
      "active_path_ids": []
    },
    {
      "frame": "frame_6",
      "phase": "transfer",
      "active_leaf": {"id":"MoveDelta","attrs":{"axis":"x","dist":0.1,"timeout_ms":1200}},
      "active_path_ids": []
    },
    {
      "frame": "frame_7",
      "phase": "retreat",
      "active_leaf": {"id":"Retreat","attrs":{"distance":0.05,"timeout_ms":800}},
      "active_path_ids": []
    },
    {
      "frame": "frame_8",
      "phase": "retreat",
      "active_leaf": {"id":"Retreat","attrs":{"distance":0.05,"timeout_ms":800}},
      "active_path_ids": []
    }
  ]
}

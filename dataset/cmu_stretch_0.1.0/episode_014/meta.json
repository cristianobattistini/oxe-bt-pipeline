{
  "dataset_id": "cmu_stretch_0.1.0",
  "episode_id": "episode_014",
  "task_summary": "Perceive the drawer handle, approach and align, grasp the handle, pull to open the drawer, verify it is open, then retreat.",
  "task_long_description": {
    "overview": "A mobile manipulator in a kitchenette must open a cabinet drawer. The scene shows a bar-handle drawer beneath a countertop. The robot uses vision to locate the handle, approaches with proper wrist yaw, aligns precisely, grasps the handle, and executes an opening motion. After opening, it verifies the drawer state and backs away to a safe standoff. Timeouts and limited retries provide robustness to brief perception failures.",
    "preconditions": ["Robot in front of the cabinet with reachable drawer", "Camera unobstructed and calibrated", "Drawer handle accessible (bar type)", "Gripper operational and cleared of objects"],
    "stepwise_plan": ["Open gripper", "If handle not visible, scan until detected", "Move to handle", "Set wrist yaw to 90Â° for bar alignment", "Approach and align with tight tolerance", "Close gripper to grasp", "Assert grasp stability", "Command opening of the drawer", "Check drawer open state", "Retreat 0.1 m and wait briefly"],
    "success_criteria": ["Drawer is visibly open and ContainerOpen condition returns success", "Robot is safely retreated with intact grasp release"],
    "failure_and_recovery": ["If handle not visible, scan with retries", "If alignment fails, re-approach on next tick", "If grasp unstable, reopen and retry sequence", "If drawer sticks, opening action will time out and the tree will re-run from perception"],
    "termination": "End after verifying the drawer is open and the robot has retreated and waited."
  },
  "frame_ranking": {
    "order": ["frame_3","frame_5","frame_2","frame_6","frame_1","frame_4","frame_7","frame_0", "frame_8"],
    "scores": {
      "frame_0": 0.12, "frame_1": 0.34, "frame_2": 0.56, "frame_3": 0.92,
      "frame_4": 0.28, "frame_5": 0.80, "frame_6": 0.49, "frame_7": 0.18, "frame_8": 0.05
    },
    "rationale_per_frame": {
      "frame_3": {
        "now_evidence": "Gripper closely aligned to the drawer handle, indicating imminent grasp/align completion.",
        "predicts_next": "Pull/ opening action likely to follow after grasp.",
        "uncertainty_reduction": "high"
      }
    }
  },
  "task_instruction": "open drawer",
  "instruction_to_ports": {
    "force": null,
    "timeout_ms": null,
    "tolerance": null,
    "retry_attempts": null
  },
  "frame_source": "contact_sheet",
  "frame_order": ["frame_0","frame_1","frame_2","frame_3","frame_4","frame_5","frame_6","frame_7", "frame_8"],
  "objects": ["drawer_handle", "drawer_A", "cabinet", "countertop"],
  "objects_from_instruction": ["drawer"],
  "blackboard_keys": [],
  "node_specs": [
    {"id":"OpenGripper","type":"Action","ports":{"width":0.09,"timeout_ms":400},"description":"Prepare to approach handle with gripper open."},
    {"id":"IsObjectVisible","type":"Condition","ports":{"target":"drawer_handle"},"description":"Check if the drawer handle is currently detected."},
    {"id":"ScanForTarget","type":"Action","ports":{"target":"drawer_handle","pattern":"raster","max_attempts":3,"timeout_ms":1200},"description":"Active scan to detect the handle if not visible."},
    {"id":"MoveTo","type":"Action","ports":{"target":"drawer_handle","timeout_ms":1500},"description":"Move end-effector to the handle pose."},
    {"id":"SetTCPYaw","type":"Action","ports":{"yaw_deg":90},"description":"Align wrist yaw with bar handle orientation."},
    {"id":"ApproachAndAlign","type":"Action","ports":{"target":"drawer_handle","tolerance":0.005,"timeout_ms":1200},"description":"Close in and align precisely to the grasp pose."},
    {"id":"CloseGripper","type":"Action","ports":{"force":20,"timeout_ms":800},"description":"Grasp the handle with moderate force."},
    {"id":"IsGraspStable","type":"Condition","ports":{},"description":"Ensure the handle is securely grasped."},
    {"id":"OpenContainer","type":"Action","ports":{"target":"drawer_A","container_type":"drawer","timeout_ms":1500},"description":"Execute the drawer opening motion."},
    {"id":"ContainerOpen","type":"Condition","ports":{"target":"drawer_A"},"description":"Verify that the drawer is open."},
    {"id":"Retreat","type":"Action","ports":{"distance":0.1,"timeout_ms":800},"description":"Back away from the opened drawer."},
    {"id":"Wait","type":"Action","ports":{"timeout_ms":400},"description":"Brief pause to ensure stability after opening."}
  ],
  "tree_stats": {"nodes_total": 15, "actions": 9, "conditions": 3, "depth": 4},
  "failure_modes": ["Handle not detected due to occlusion or lighting", "Misalignment prevents grasp", "Grasp slips during pull", "Drawer friction exceeds capability causing timeout"],
  "recovery_strategy": ["Raster scan retries for perception", "Re-approach and re-align on next tick", "Reopen gripper and repeat grasp sequence", "If open command times out, retry after short wait"],
  "assumptions": ["Frames depict a bar-handle drawer under a countertop; orientation assumed horizontal requiring yaw=90.", "Symbolic targets 'drawer_handle' and 'drawer_A' are consistent with the episode but not provided explicitly.", "OpenContainer abstracts the physical pull; additional Retreat models extra pull distance."],
  "evaluation_notes": {
    "expected_success_criteria": ["ContainerOpen returns success and drawer appears extended in frames", "No collisions and safe retreat achieved"],
    "test_scenarios": ["happy path","object_missing","grasp_fail","perception_noise"]
  },
  "timing": {"model_reported_tokens": null, "client_elapsed_ms": null},
  "local_annotations": [
    {
      "frame": "frame_0",
      "phase": "perceive",
      "active_leaf": {"id":"ScanForTarget","attrs":{"target":"drawer_handle","pattern":"raster","max_attempts":3,"timeout_ms":1200}},
      "active_path_ids": []
    },
    {
      "frame": "frame_1",
      "phase": "approach",
      "active_leaf": {"id":"MoveTo","attrs":{"target":"drawer_handle","timeout_ms":1500}},
      "active_path_ids": []
    },
    {
      "frame": "frame_2",
      "phase": "approach",
      "active_leaf": {"id":"SetTCPYaw","attrs":{"yaw_deg":90}},
      "active_path_ids": []
    },
    {
      "frame": "frame_3",
      "phase": "verify",
      "active_leaf": {"id":"ApproachAndAlign","attrs":{"target":"drawer_handle","tolerance":0.005,"timeout_ms":1200}},
      "active_path_ids": []
    },
    {
      "frame": "frame_4",
      "phase": "grasp",
      "active_leaf": {"id":"CloseGripper","attrs":{"force":20,"timeout_ms":800}},
      "active_path_ids": []
    },
    {
      "frame": "frame_5",
      "phase": "transfer",
      "active_leaf": {"id":"OpenContainer","attrs":{"target":"drawer_A","container_type":"drawer","timeout_ms":1500}},
      "active_path_ids": []
    },
    {
      "frame": "frame_6",
      "phase": "transfer",
      "active_leaf": {"id":"OpenContainer","attrs":{"target":"drawer_A","container_type":"drawer","timeout_ms":1500}},
      "active_path_ids": []
    },
    {
      "frame": "frame_7",
      "phase": "retreat",
      "active_leaf": {"id":"Retreat","attrs":{"distance":0.1,"timeout_ms":800}},
      "active_path_ids": []
    },
    {
      "frame": "frame_8",
      "phase": "retreat",
      "active_leaf": {"id":"Wait","attrs":{"timeout_ms":400}},
      "active_path_ids": []
    }
  ]
}

{
  "dataset_id": "cmu_stretch_0.1.0",
  "episode_id": "episode_109",
  "task_summary": "Detect, grasp the drawer handle, pull to open, release, and retreat.",
  "task_long_description": {
    "overview": "A Stretch-like mobile manipulator opens a wooden cabinet drawer. The contact sheet shows the gripper approaching a horizontal bar handle on a base cabinet below a countertop. The plan is to perceive the handle, align yaw to the bar, pinch-grasp it, pull along the drawer’s opening axis, then release and back off. Timeouts are conservative to avoid stalls; tolerances are tight enough for handle capture. No door hinges are involved, only a sliding drawer.",
    "preconditions": [
      "Drawer is reachable and not locked",
      "Handle visible or discoverable by scan",
      "Sufficient clearance in front of drawer for pulling",
      "Gripper operational and empty"
    ],
    "stepwise_plan": [
      "Ensure gripper open.",
      "Check/scan for drawer_handle and detect it.",
      "Move above and align to handle; set yaw to match bar.",
      "Compute grasp and pinch the handle; verify grasp stability.",
      "Pull along x-axis to open the drawer.",
      "Release handle and retreat."
    ],
    "success_criteria": [
      "Drawer translates outward visibly (e.g., >5 cm)",
      "Gripper releases without re-closing the drawer",
      "Robot retreats safely without collision"
    ],
    "failure_and_recovery": [
      "Handle not visible: perform raster scan and re-detect",
      "Grasp unstable: reopen, recompute grasp, and retry",
      "Insufficient opening: perform an additional pull delta",
      "Contact/collision detected: stop motion and retreat"
    ],
    "termination": "After successful pull, release, and retreat are completed."
  },
  "frame_ranking": {
    "order": ["frame_3","frame_5","frame_2","frame_6","frame_1","frame_4","frame_7","frame_0", "frame_8"],
    "scores": {
      "frame_0": 0.12,
      "frame_1": 0.34,
      "frame_2": 0.56,
      "frame_3": 0.92,
      "frame_4": 0.28,
      "frame_5": 0.80,
      "frame_6": 0.49,
      "frame_7": 0.18,
      "frame_8": 0.05
    },
    "rationale_per_frame": {
      "frame_3": {
        "now_evidence": "First clear grasp on the bar handle with end-effector aligned.",
        "predicts_next": "Pull motion expected to translate drawer outward.",
        "uncertainty_reduction": "high"
      }
    }
  },
  "task_instruction": "open drawer",
  "instruction_to_ports": {
    "force": null,
    "timeout_ms": null,
    "tolerance": null,
    "retry_attempts": null
  },
  "frame_source": "contact_sheet",
  "frame_order": ["frame_0","frame_1","frame_2","frame_3","frame_4","frame_5","frame_6","frame_7", "frame_8"],
  "objects": ["drawer", "drawer_handle", "cabinet", "countertop", "robot_gripper"],
  "objects_from_instruction": ["drawer"],
  "blackboard_keys": ["grasp_handle"],
  "node_specs": [
    {"id":"OpenGripper","type":"Action","ports":{"width":"float","timeout_ms":"int"},"description":"Open gripper to a set width to prepare or release."},
    {"id":"IsObjectVisible","type":"Condition","ports":{"target":"string"},"description":"Checks if the specified target is currently visible."},
    {"id":"ScanForTarget","type":"Action","ports":{"target":"string","pattern":"string","max_attempts":"int","timeout_ms":"int"},"description":"Active scan (raster) to locate target when not immediately visible."},
    {"id":"DetectObject","type":"Action","ports":{"target":"string","timeout_ms":"int"},"description":"Trigger detector to localize the target object/part."},
    {"id":"MoveAbove","type":"Action","ports":{"target":"string","offset_z":"float","timeout_ms":"int"},"description":"Move to a pose above the target with vertical clearance."},
    {"id":"ApproachAndAlign","type":"Action","ports":{"target":"string","tolerance":"float","timeout_ms":"int"},"description":"Close-in approach with alignment within tolerance."},
    {"id":"SetTCPYaw","type":"Action","ports":{"yaw_deg":"int"},"description":"Rotate tool yaw to align with handle orientation."},
    {"id":"ComputeGraspPose","type":"Action","ports":{"target":"string","strategy":"string","result_key":"string"},"description":"Compute grasp pose using pinch strategy and store in blackboard."},
    {"id":"Pick","type":"Action","ports":{"grasp_key":"string","timeout_ms":"int"},"description":"Execute the grasp based on stored grasp pose."},
    {"id":"IsGraspStable","type":"Condition","ports":{},"description":"Verify grasp stability before pulling."},
    {"id":"MoveDelta","type":"Action","ports":{"axis":"string","dist":"float","timeout_ms":"int"},"description":"Pull along the drawer’s axis to open it."},
    {"id":"Retreat","type":"Action","ports":{"distance":"float","timeout_ms":"int"},"description":"Back off to a safe standoff after release."}
  ],
  "tree_stats": {"nodes_total": 16, "actions": 12, "conditions": 2, "depth": 3},
  "failure_modes": [
    "Handle not detected",
    "Yaw misalignment leads to slip",
    "Insufficient pull distance",
    "Obstacle limits retreat"
  ],
  "recovery_strategy": [
    "Invoke scan then re-detect",
    "Reopen, recompute grasp, realign yaw",
    "Execute additional MoveDelta pull",
    "Abort and retreat with smaller distance"
  ],
  "assumptions": [
    "Handle is a horizontal bar (frames suggest this) so yaw 90° is selected.",
    "Drawer opens along robot +/−x; pull implemented as MoveDelta axis='x' with negative distance.",
    "Estimated pull of 0.2 m chosen; adjust if physical drawer travel differs.",
    "If any mismatch between instruction and frames occurs, frames take precedence."
  ],
  "evaluation_notes": {
    "expected_success_criteria": [
      "Drawer translation visibly increases across frames",
      "Stable grasp maintained during pull",
      "Safe release and retreat"
    ],
    "test_scenarios": ["happy path","object_missing","grasp_fail","perception_noise"]
  },
  "timing": {"model_reported_tokens": null, "client_elapsed_ms": null},
  "local_annotations": [
    {
      "frame": "frame_0",
      "phase": "perceive",
      "active_leaf": {"id":"ScanForTarget","attrs":{"target":"drawer_handle","pattern":"raster","max_attempts":3,"timeout_ms":1500}},
      "active_path_ids": []
    },
    {
      "frame": "frame_1",
      "phase": "approach",
      "active_leaf": {"id":"MoveAbove","attrs":{"target":"drawer_handle","offset_z":0.05,"timeout_ms":1200}},
      "active_path_ids": []
    },
    {
      "frame": "frame_2",
      "phase": "verify",
      "active_leaf": {"id":"DetectObject","attrs":{"target":"drawer_handle","timeout_ms":800}},
      "active_path_ids": []
    },
    {
      "frame": "frame_3",
      "phase": "grasp",
      "active_leaf": {"id":"Pick","attrs":{"grasp_key":"grasp_handle","timeout_ms":1500}},
      "active_path_ids": []
    },
    {
      "frame": "frame_4",
      "phase": "transfer",
      "active_leaf": {"id":"MoveDelta","attrs":{"axis":"x","dist":-0.2,"timeout_ms":1500}},
      "active_path_ids": []
    },
    {
      "frame": "frame_5",
      "phase": "transfer",
      "active_leaf": {"id":"MoveDelta","attrs":{"axis":"x","dist":-0.2,"timeout_ms":1500}},
      "active_path_ids": []
    },
    {
      "frame": "frame_6",
      "phase": "transfer",
      "active_leaf": {"id":"MoveDelta","attrs":{"axis":"x","dist":-0.2,"timeout_ms":1500}},
      "active_path_ids": []
    },
    {
      "frame": "frame_7",
      "phase": "retreat",
      "active_leaf": {"id":"Retreat","attrs":{"distance":0.1,"timeout_ms":800}},
      "active_path_ids": []
    },
    {
      "frame": "frame_8",
      "phase": "retreat",
      "active_leaf": {"id":"Retreat","attrs":{"distance":0.1,"timeout_ms":800}},
      "active_path_ids": []
    }
  ]
}
